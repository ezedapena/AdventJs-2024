/*

¬°Es hora de seleccionar a los renos m√°s r√°pidos para los viajes de Santa! ü¶åüéÑ
Santa Claus ha organizado unas emocionantes carreras de renos para decidir cu√°les est√°n en mejor forma.

Tu tarea es mostrar el progreso de cada reno en una pista de nieve en formato isom√©trico.

La informaci√≥n que recibes:

indices: Un array de enteros que representan el progreso de cada reno en la pista:
0: El carril est√° vac√≠o.
N√∫mero positivo: La posici√≥n actual del reno desde el inicio de la pista.
N√∫mero negativo: La posici√≥n actual del reno desde el final de la pista.
length: La longitud de cada carril.
Devuelve un string que represente la pista de la carrera:

Cada carril tiene exactamente length posiciones llenas de nieve (~).
Cada reno se representa con la letra r.
Los carriles est√°n numerados al final con /1, /2, etc.
La vista es isom√©trica, por lo que los carriles inferiores est√°n desplazados hacia la derecha.

*/


function drawRace(indices: number[], length: number): string {
    let race = "";

    for (let i = 0; i < indices.length; i++) {
        const offset = " ".repeat(indices.length - i - 1); // Desplazamiento isom√©trico
        let track = "~".repeat(length).split("");

        if (indices[i] > 0) {
            // Posici√≥n positiva desde el inicio
            track[indices[i]] = "r";
        } else if (indices[i] < 0) {
            // Posici√≥n negativa desde el final
            track[length + indices[i]] = "r";
        }

        // Construir el carril con el reno y el n√∫mero del carril
        race += `${offset}${track.join("")} /${i + 1}`;
        if (i < indices.length - 1) {
            race += "\n"; // A√±adir salto de l√≠nea entre carriles
        }
    }

    return race;
}



drawRace([0, 5, -3], 10)
/*
  ~~~~~~~~~~ /1
 ~~~~~r~~~~ /2
~~~~~~~r~~ /3
*/

drawRace([2, -1, 0, 5], 8)
/*
   ~~r~~~~~ /1
  ~~~~~~~r /2
 ~~~~~~~~ /3
~~~~~r~~ /4
*/

drawRace([3, 7, -2], 12)
/*
  ~~~r~~~~~~~~ /1
 ~~~~~~~~r~~~ /2
~~~~~~~~~r~~ /3
*/